version: '3.5'

services:
  nginx-container:
    container_name: nginx-container
    build:
      context: ./docker/nginx
      args:
        UID: $U_ID
    ports:
      - 250:80
    volumes:
      - ./public:/appdata/www/public
    depends_on:
      - php-container
      - database-container
    networks:
      - symfony-network

  php-container:
    container_name: php-container
    build:
      context: ./docker/php
      args:
        UID: $U_ID
    environment:
      PHP_IDE_CONFIG: serverName=Docker
    volumes:
      - ./:/appdata/www
      - ~/.ssh/id_rsa:/home/appuser/.ssh/id_rsa
    depends_on:
      - database-container
    networks:
      - symfony-network

  database-container:
    container_name: database-container
    build:
      context: ./docker/database
    ports:
      - 36000:3306
    environment:
      MYSQL_DATABASE: symfony_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    command: mysqld --sql_mode="STRICT_ALL_TABLES,NO_ENGINE_SUBSTITUTION"
    volumes:
      - database-container-data:/var/lib/mysql
    networks:
      - symfony-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
  database-container-data:
networks:
  symfony-network:
    external: true